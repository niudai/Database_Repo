application {
    config {
        prodDatabaseType mysql
        buildTool maven
        searchEngine elasticsearch
    }
    entities *
}

entity Campus {
	name String
    address String
}


entity Major {
	name String
    address String
}

entity Record {
	student String
    date LocalDate
    semaster String
    score Integer
}

entity SchoolClass {
	name String
    createdDate LocalDate    
}

entity Grade {
	grade Integer
}

entity People {
	idType IdType
    chineseName String
    englishName String
    gender 	Gender
    birthDate LocalDate
    race String
    nation String
    address String
    postcode String
    telephone String
}

enum Gender {
	Male,
    Female
}

entity Student {
	studentNumber	String
    startDate String
    email String
}

entity Teacher {
	workNumber String
    startDate LocalDate
    email String
    title Title
}

entity Course {
	name String,
    examType ExamType
}

enum WeekDay {
	Mon, Tue, Wed, Tur, Fri, Sat, Sun
}

entity Interval {
	day WeekDay
    start Integer
    end Integer
}


enum ExamType {
	EXAM, QA
}

entity Major {
	name String
}

entity Record {
    date LocalDate
    score Integer
}

entity Semaster {
	year Integer
    season Season
}

enum IdType {
	IdCard, Passport
}

enum Season {
	Spring, Summer, Fall, Winter
}

entity JException {
	date LocalDate
    isYouthLeague Boolean
    cause String
}

enum Title {
    // professor and associated professor
	P, AP
}


relationship OneToOne {
	SchoolClass{master} to Teacher{SchoolClass},
    People{teacher} to Teacher{people},
    People{student} to Student{people},
}

relationship ManyToOne {
    JException{originalMajor} to Major,
    JException{newMajor} to Major
    JException{originalSchoolClass} to SchoolClass,
    JException{newSchoolClass} to SchoolClass,
    JException{originalGrade} to Grade,
    JException{newGrade} to Grade,
    Record{semaster} to Semaster,
    Record{course} to Course,
	Course{semaster} to Semaster,
	SchoolClass{grade} to Grade,
    Student{major} to Major
}

relationship OneToMany {
	Campus to Major{campus},
    Major to SchoolClass{major},
    SchoolClass{students} to Student{SchoolClass},
	Major{teachers} to Teacher{major},
    Student{exceptions} to JException{student},
    Major to Course{major},
    Teacher to Course{teacher},
    Course{time} to Interval,
    Student to Record{student},
}


// Use Data Transfert Objects (DTO)
// dto * with mapstruct


// Set an angular suffix
// angularSuffix * with mySuffix
